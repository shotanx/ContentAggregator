name: Docker Image CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/content-aggregator
  CONTAINER_NAME: content-aggregator
  NETWORK_NAME: contentaggregator-network
  YTDLP_DIR: yt-dlp-tools

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      - name: Stop and Remove Old Container
        run: |
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true

      - name: Create Docker Network
        run: docker network create ${{ env.NETWORK_NAME }} || true

      - name: Clean up previous dev-cert and yt-dlp
        run: |
          rm -f dev-cert.pfx
          rm -rf ${{ env.YTDLP_DIR }}

      - name: Decode and Save dev-cert
        run: |
          echo "${{ secrets.DEV_CERT }}" | base64 --decode > dev-cert.pfx

      - name: Prepare new yt-dlp Binary
        run: |
          mkdir -p ${{ env.YTDLP_DIR }}
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ${{ env.YTDLP_DIR }}/yt-dlp
          chmod +x ${{ env.YTDLP_DIR }}/yt-dlp

      - name: Deploy New Container
        run: |
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            --network ${{ env.NETWORK_NAME }} \
            -v "$(pwd)/dev-cert.pfx:/etc/ssl/certs/dev-cert.pfx" \
            -v "$(pwd)/${{ env.YTDLP_DIR }}:/tools" \
            -p 80:80 \
            -p 443:443 \
            -e CERT_PASSWORD="${{ secrets.CERT_PASSWORD }}" \
            -e AZURETRANSLATORTOKEN="${{ secrets.AZURETRANSLATORTOKEN }}" \
            -e AZURETRANSLATORURL="${{ secrets.AZURETRANSLATORURL }}" \
            -e CONNECTIONSTRINGS__POSTGRESQLCONNECTION="${{ secrets.CONNECTIONSTRINGS__POSTGRESQLCONNECTION }}" \
            -e FACEBOOKACCESSTOKEN="${{ secrets.FACEBOOKACCESSTOKEN }}" \
            -e FBPAGEID="${{ secrets.FBPAGEID }}" \
            -e LMSTUDIOAPIURL="${{ secrets.LMSTUDIOAPIURL }}" \
            -e YOUTUBEACCESSTOKEN="${{ secrets.YOUTUBEACCESSTOKEN }}" \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
